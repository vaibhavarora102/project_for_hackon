#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    Apr 12, 2020 08:04:39 AM IST  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import symptom_support


def vp_start_symptom_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    symptom_support.set_Tk_var()
    top = Toplevel1 (root)
    symptom_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    symptom_support.set_Tk_var()
    top = Toplevel1 (w)
    symptom_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def submit(self):
        print(1,self.TCombobox1.get())
        print(2,self.TCombobox2.get())
        print(3,self.TCombobox3.get())
        print(4,self.TCombobox4.get())
        print(5,self.TCombobox5.get())
        print(6,self.TCombobox6.get())
        print(7,self.TCombobox7.get())
        print(8,self.TCombobox8.get())
        print(9,self.TCombobox9.get())
        print(10,self.TCombobox10.get())
        derived_values= [ self.TCombobox1.get() , self.TCombobox2.get() , self.TCombobox3.get() , self.TCombobox4.get() , self.TCombobox5.get() , self.TCombobox6.get() , self.TCombobox7.get() , self.TCombobox8.get() , self.TCombobox9.get() , self.TCombobox10.get() ]
        
        #print(derived_values)
        
        symptom_support.query_fun(derived_values)
        
        symptom_support.destroy_window()
        
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        
        lis=["YOUR ANS","YES","MAY BE","NO"]
        
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("602x691+418+0")
        top.minsize(1, 1)
        top.maxsize(1351, 738)
        top.resizable(1, 1)
        top.title("New Toplevel")
        top.configure(highlightcolor="black")

        self.CLOSE = tk.Button(top)
        self.CLOSE.place(relx=0.515, rely=0.854, height=29, width=68)
        self.CLOSE.configure(activebackground="#f9f9f9")
        self.CLOSE.configure(text='''CLOSE''',command=symptom_support.destroy_window)

        self.SUBMIT = tk.Button(top)
        self.SUBMIT.place(relx=0.731, rely=0.854, height=29, width=74)
        self.SUBMIT.configure(activebackground="#f9f9f9")
        self.SUBMIT.configure(text='''SUBMIT''',command=self.submit)

        self.INTRO = tk.Label(top)
        self.INTRO.place(relx=0.017, rely=0.014, height=28, width=576)
        self.INTRO.configure(activebackground="#f9f9f9")
        self.INTRO.configure(text='''INTRO''')

        self.Label_1 = tk.Label(top)
        self.Label_1.place(relx=0.017, rely=0.072, height=18, width=586)
        self.Label_1.configure(activebackground="#f9f9f9")
        self.Label_1.configure(text='''Symptom 1        Do you have fever''')

        self.Label_2 = tk.Label(top)
        self.Label_2.place(relx=0.017, rely=0.145, height=19, width=586)
        self.Label_2.configure(activebackground="#f9f9f9")
        self.Label_2.configure(text='''Symptom 2        Do you have Headache''')

        self.Label_3 = tk.Label(top)
        self.Label_3.place(relx=0.017, rely=0.217, height=19, width=586)
        self.Label_3.configure(activebackground="#f9f9f9")
        self.Label_3.configure(text='''Symptom 3        Do you have Diarrhea''')

        self.Label_4 = tk.Label(top)
        self.Label_4.place(relx=0.017, rely=0.289, height=18, width=586)
        self.Label_4.configure(activebackground="#f9f9f9")
        self.Label_4.configure(text='''Symptom 4        Do you have Dry-cough''')

        self.Label_5 = tk.Label(top)
        self.Label_5.place(relx=0.017, rely=0.362, height=18, width=586)
        self.Label_5.configure(activebackground="#f9f9f9")
        self.Label_5.configure(text='''Symptom 5       Do you have Lethargy(exhaustion)''')

        self.Label_6 = tk.Label(top)
        self.Label_6.place(relx=0.017, rely=0.434, height=19, width=586)
        self.Label_6.configure(activebackground="#f9f9f9")
        self.Label_6.configure(text='''Symptom 6       Do you have Body pain''')

        self.Label_7 = tk.Label(top)
        self.Label_7.place(relx=0.017, rely=0.507, height=19, width=586)
        self.Label_7.configure(activebackground="#f9f9f9")
        self.Label_7.configure(text='''Symptom 7       Do you have vomiting''')

        self.Label_8 = tk.Label(top)
        self.Label_8.place(relx=0.017, rely=0.579, height=18, width=586)
        self.Label_8.configure(activebackground="#f9f9f9")
        self.Label_8.configure(text='''Symptom 8       Do you have sweating''')

        self.Label_9 = tk.Label(top)
        self.Label_9.place(relx=0.0, rely=0.651, height=18, width=596)
        self.Label_9.configure(activebackground="#f9f9f9")
        self.Label_9.configure(text='''Symptom 9       Do you have red eyes''')

        self.Label_10 = tk.Label(top)
        self.Label_10.place(relx=0.0, rely=0.724, height=19, width=596)
        self.Label_10.configure(activebackground="#f9f9f9")
        self.Label_10.configure(text='''Symptom 10       Do you have naueseaa''')

        self.TCombobox1 = ttk.Combobox(top)
        self.TCombobox1.place(relx=0.415, rely=0.101, relheight=0.026
                , relwidth=0.194)
        self.TCombobox1['values']= lis 
        self.TCombobox1.current(0) 

        self.TCombobox2 = ttk.Combobox(top)
        self.TCombobox2.place(relx=0.415, rely=0.174, relheight=0.027
                , relwidth=0.194)
        self.TCombobox2['values']= lis 
        self.TCombobox2.current(0) 

        self.TCombobox3 = ttk.Combobox(top)
        self.TCombobox3.place(relx=0.415, rely=0.246, relheight=0.026
                , relwidth=0.194)
        self.TCombobox3['values']= lis 
        self.TCombobox3.current(0) 

        self.TCombobox4 = ttk.Combobox(top)
        self.TCombobox4.place(relx=0.415, rely=0.318, relheight=0.026
                , relwidth=0.194)
        self.TCombobox4['values']= lis 
        self.TCombobox4.current(0) 

        self.TCombobox5 = ttk.Combobox(top)
        self.TCombobox5.place(relx=0.415, rely=0.391, relheight=0.027
                , relwidth=0.194)
        self.TCombobox5['values']= lis 
        self.TCombobox5.current(0) 

        self.TCombobox6 = ttk.Combobox(top)
        self.TCombobox6.place(relx=0.415, rely=0.463, relheight=0.027
                , relwidth=0.194)
        self.TCombobox6['values']= lis 
        self.TCombobox6.current(0) 

        self.TCombobox7 = ttk.Combobox(top)
        self.TCombobox7.place(relx=0.415, rely=0.535, relheight=0.026
                , relwidth=0.194)
        self.TCombobox7['values']= lis 
        self.TCombobox7.current(0) 

        self.TCombobox8 = ttk.Combobox(top)
        self.TCombobox8.place(relx=0.415, rely=0.608, relheight=0.026
                , relwidth=0.194)
        self.TCombobox8['values']= lis 
        self.TCombobox8.current(0) 

        self.TCombobox9 = ttk.Combobox(top)
        self.TCombobox9.place(relx=0.415, rely=0.68, relheight=0.027
                , relwidth=0.194)
        self.TCombobox9['values']= lis 
        self.TCombobox9.current(0) 

        self.TCombobox10 = ttk.Combobox(top)
        self.TCombobox10.place(relx=0.415, rely=0.753, relheight=0.027
                , relwidth=0.194)
        self.TCombobox10['values']= lis 
        self.TCombobox10.current(0) 

#if __name__ == '__main__':s
#    vp_start_symptom_gui()


